***************
*** 546,591 ****
   * The return values from this function are intended to be directly returned
   * from vidioc_reqbufs handler in driver.
   */
- int vb2_reqbufs(struct vb2_queue *q, struct v4l2_requestbuffers *req)
  {
  	unsigned int num_buffers, allocated_buffers, num_planes = 0;
- 	int ret = 0;
- 
- 	if (q->fileio) {
- 		dprintk(1, "reqbufs: file io in progress\n");
- 		return -EBUSY;
- 	}
- 
- 	if (req->memory != V4L2_MEMORY_MMAP
- 			&& req->memory != V4L2_MEMORY_USERPTR) {
- 		dprintk(1, "reqbufs: unsupported memory type\n");
- 		return -EINVAL;
- 	}
- 
- 	if (req->type != q->type) {
- 		dprintk(1, "reqbufs: requested type is incorrect\n");
- 		return -EINVAL;
- 	}
  
  	if (q->streaming) {
  		dprintk(1, "reqbufs: streaming active\n");
  		return -EBUSY;
  	}
  
- 	/*
- 	 * Make sure all the required memory ops for given memory type
- 	 * are available.
- 	 */
- 	if (req->memory == V4L2_MEMORY_MMAP && __verify_mmap_ops(q)) {
- 		dprintk(1, "reqbufs: MMAP for current setup unsupported\n");
- 		return -EINVAL;
- 	}
- 
- 	if (req->memory == V4L2_MEMORY_USERPTR && __verify_userptr_ops(q)) {
- 		dprintk(1, "reqbufs: USERPTR for current setup unsupported\n");
- 		return -EINVAL;
- 	}
- 
  	if (req->count == 0 || q->num_buffers != 0 || q->memory != req->memory) {
  		/*
  		 * We already have buffers allocated, so first check if they
--- 589,604 ----
   * The return values from this function are intended to be directly returned
   * from vidioc_reqbufs handler in driver.
   */
+ static int __reqbufs(struct vb2_queue *q, struct v4l2_requestbuffers *req)
  {
  	unsigned int num_buffers, allocated_buffers, num_planes = 0;
+ 	int ret;
  
  	if (q->streaming) {
  		dprintk(1, "reqbufs: streaming active\n");
  		return -EBUSY;
  	}
  
  	if (req->count == 0 || q->num_buffers != 0 || q->memory != req->memory) {
  		/*
  		 * We already have buffers allocated, so first check if they
***************
*** 688,727 ****
   * The return values from this function are intended to be directly returned
   * from vidioc_create_bufs handler in driver.
   */
- int vb2_create_bufs(struct vb2_queue *q, struct v4l2_create_buffers *create)
  {
  	unsigned int num_planes = 0, num_buffers, allocated_buffers;
- 	int ret = 0;
- 
- 	if (q->fileio) {
- 		dprintk(1, "%s(): file io in progress\n", __func__);
- 		return -EBUSY;
- 	}
- 
- 	if (create->memory != V4L2_MEMORY_MMAP
- 			&& create->memory != V4L2_MEMORY_USERPTR) {
- 		dprintk(1, "%s(): unsupported memory type\n", __func__);
- 		return -EINVAL;
- 	}
- 
- 	if (create->format.type != q->type) {
- 		dprintk(1, "%s(): requested type is incorrect\n", __func__);
- 		return -EINVAL;
- 	}
- 
- 	/*
- 	 * Make sure all the required memory ops for given memory type
- 	 * are available.
- 	 */
- 	if (create->memory == V4L2_MEMORY_MMAP && __verify_mmap_ops(q)) {
- 		dprintk(1, "%s(): MMAP for current setup unsupported\n", __func__);
- 		return -EINVAL;
- 	}
- 
- 	if (create->memory == V4L2_MEMORY_USERPTR && __verify_userptr_ops(q)) {
- 		dprintk(1, "%s(): USERPTR for current setup unsupported\n", __func__);
- 		return -EINVAL;
- 	}
  
  	if (q->num_buffers == VIDEO_MAX_FRAME) {
  		dprintk(1, "%s(): maximum number of buffers already allocated\n",
--- 714,723 ----
   * The return values from this function are intended to be directly returned
   * from vidioc_create_bufs handler in driver.
   */
+ static int __create_bufs(struct vb2_queue *q, struct v4l2_create_buffers *create)
  {
  	unsigned int num_planes = 0, num_buffers, allocated_buffers;
+ 	int ret;
  
  	if (q->num_buffers == VIDEO_MAX_FRAME) {
  		dprintk(1, "%s(): maximum number of buffers already allocated\n",
