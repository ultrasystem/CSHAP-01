***************
*** 480,527 ****
  static int fimc_capture_open(struct file *file)
  {
  	struct fimc_dev *fimc = video_drvdata(file);
- 	int ret;
  
  	dbg("pid: %d, state: 0x%lx", task_pid_nr(current), fimc->state);
  
  	if (fimc_m2m_active(fimc))
- 		return -EBUSY;
  
  	set_bit(ST_CAPT_BUSY, &fimc->state);
  	ret = pm_runtime_get_sync(&fimc->pdev->dev);
  	if (ret < 0)
- 		return ret;
  
  	ret = v4l2_fh_open(file);
- 	if (ret)
- 		return ret;
- 
- 	if (++fimc->vid_cap.refcnt != 1)
- 		return 0;
  
- 	ret = fimc_pipeline_initialize(&fimc->pipeline,
  				       &fimc->vid_cap.vfd->entity, true);
- 	if (ret < 0) {
- 		clear_bit(ST_CAPT_BUSY, &fimc->state);
- 		pm_runtime_put_sync(&fimc->pdev->dev);
- 		fimc->vid_cap.refcnt--;
- 		v4l2_fh_release(file);
- 		return ret;
- 	}
- 	ret = fimc_capture_ctrls_create(fimc);
  
- 	if (!ret && !fimc->vid_cap.user_subdev_api)
- 		ret = fimc_capture_set_default_format(fimc);
  
  	return ret;
  }
  
  static int fimc_capture_close(struct file *file)
  {
  	struct fimc_dev *fimc = video_drvdata(file);
  
  	dbg("pid: %d, state: 0x%lx", task_pid_nr(current), fimc->state);
  
  	if (--fimc->vid_cap.refcnt == 0) {
  		clear_bit(ST_CAPT_BUSY, &fimc->state);
  		fimc_stop_capture(fimc, false);
--- 480,538 ----
  static int fimc_capture_open(struct file *file)
  {
  	struct fimc_dev *fimc = video_drvdata(file);
+ 	int ret = -EBUSY;
  
  	dbg("pid: %d, state: 0x%lx", task_pid_nr(current), fimc->state);
  
+ 	if (mutex_lock_interruptible(&fimc->lock))
+ 		return -ERESTARTSYS;
+ 
  	if (fimc_m2m_active(fimc))
+ 		goto unlock;
  
  	set_bit(ST_CAPT_BUSY, &fimc->state);
  	ret = pm_runtime_get_sync(&fimc->pdev->dev);
  	if (ret < 0)
+ 		goto unlock;
  
  	ret = v4l2_fh_open(file);
+ 	if (ret) {
+ 		pm_runtime_put(&fimc->pdev->dev);
+ 		goto unlock;
+ 	}
  
+ 	if (++fimc->vid_cap.refcnt == 1) {
+ 		ret = fimc_pipeline_initialize(&fimc->pipeline,
  				       &fimc->vid_cap.vfd->entity, true);
  
+ 		if (!ret && !fimc->vid_cap.user_subdev_api)
+ 			ret = fimc_capture_set_default_format(fimc);
  
+ 		if (!ret)
+ 			ret = fimc_capture_ctrls_create(fimc);
+ 
+ 		if (ret < 0) {
+ 			clear_bit(ST_CAPT_BUSY, &fimc->state);
+ 			pm_runtime_put_sync(&fimc->pdev->dev);
+ 			fimc->vid_cap.refcnt--;
+ 			v4l2_fh_release(file);
+ 		}
+ 	}
+ unlock:
+ 	mutex_unlock(&fimc->lock);
  	return ret;
  }
  
  static int fimc_capture_close(struct file *file)
  {
  	struct fimc_dev *fimc = video_drvdata(file);
+ 	int ret;
  
  	dbg("pid: %d, state: 0x%lx", task_pid_nr(current), fimc->state);
  
+ 	if (mutex_lock_interruptible(&fimc->lock))
+ 		return -ERESTARTSYS;
+ 
  	if (--fimc->vid_cap.refcnt == 0) {
  		clear_bit(ST_CAPT_BUSY, &fimc->state);
  		fimc_stop_capture(fimc, false);
